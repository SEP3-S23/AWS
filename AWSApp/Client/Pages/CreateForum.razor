@page "/CreateForum"


@using BackEnd.Services.Authentication
@using Backend.Services.Forums
@using global::Shared.DTOs
@using global::Shared.Model
<MudText Typo="Typo.h4" Style="margin-bottom: 30px">Create Forum</MudText>



<MudGrid Class="gap-4">
<MudItem xs="12" sm="12" md="12" >
        <MudCard Class="mud-elevation-8">
            <MudCardContent>
                <MudTextField @bind-Value="forumTitle" Label="Forum Name" Required="true" RequiredError="Forum name is required!" HelperText="Insert the Forum Name" Variant="Variant.Outlined" Style="margin-bottom: 20px" />
                <MudTextField @bind-Value="forumDescription" T="string" Counter="25" HelperText="Insert Forum Description - max. 25 characters" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharactersDescription))" Label="Forum Description" Variant="Variant.Outlined" Style="margin-bottom: 20px"  />
                <MudText Typo="Typo.subtitle1" style="margin-top: 40px;">Choose a Category</MudText>
                <MudTextField @bind-Value="category" Label="Category" HelperText="Insert Forum Category - max. 15 characters" Validation="@(new Func<string, IEnumerable<string>>(MaxCharactersCategory))" Variant="Variant.Outlined"></MudTextField>
            </MudCardContent>
            <MudCardActions Class="d-flex align-center flex-grow-1 gap-4" >
                <MudButton Class="d-flex flex-1" OnClick="CreateForums" ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Style="margin-top: 40px"  >Create</MudButton>
               </MudCardActions>
        </MudCard>
    </MudItem>

    
<MudItem  xs="12" sm="12" md="12">
        <MudPaper Class="pa-4 mud-height-full custom-background" >
            <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
            @if (success)
            {
                <MudText Color="Color.Success">Success</MudText>
            }
            else
            {
                <MudText Color="@Color.Error">
                    @Error
                </MudText>
            }
        </MudPaper>
    </MudItem>


    
</MudGrid>
@code {
    string forumTitle = "";
    string forumDescription = "";
    string token = "";
    string Error { get; set; }
    private bool success { get; set; }
    
    
    
    private IEnumerable<string> MaxCharactersDescription(string value)
    {
        const int MaxLength = 25;
        if (!string.IsNullOrEmpty(value) && value.Length > MaxLength)
        {
            yield return $"The value cannot exceed {MaxLength} characters.";
        }
    }
    
    
    private IEnumerable<string> MaxCharactersCategory(string value)
    {
        const int MaxLength = 15;
        if (!string.IsNullOrEmpty(value) && value.Length > MaxLength)
        {
            yield return $"The value cannot exceed {MaxLength} characters.";
        }
    }

    public string category { get; set; } 
    
    private async Task CreateForums()
    {
        if (forumDescription.Length > 25 || category.Length > 15)
        {
            return;
        }
        CreateForumDto dto = new(forumTitle, forumDescription, category);
        IForumService forumService = new ForumService("http://localhost:8080/api/v1/forums");
        try
        {
            var result = await forumService.CreateAsync(dto);
            success = true;
        }
        catch (Exception e)
        {
            success = false;
            Error = "You have to be registered";
            StateHasChanged();
        }
    }




}