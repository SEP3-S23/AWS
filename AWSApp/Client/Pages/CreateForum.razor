@page "/CreateForum"
@using Backend.Services
@using BackEnd.Services.Authentication
@using global::Shared.Model
@inject ForumService ForumService
@using MudBlazor
<MudText Typo="Typo.h4" Style="margin-bottom: 30px">Create Forum</MudText>



<MudTextField @bind-Value="forumTitle" Label="Forum Name" Required="true" RequiredError="Forum name is required!" HelperText="Insert the Forum Name" Variant="Variant.Outlined" Style="margin-bottom: 20px" />

<MudTextField @bind-Value="forumDescription" T="string" Counter="25" HelperText="Insert Forum Description - max. 25 characters" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Forum Description" Variant="Variant.Outlined" Style="margin-bottom: 20px" @bind-Value="forumDescription" />

<MudText Typo="Typo.subtitle1" style="margin-top: 40px;">Choose a Category</MudText>
<MudItem @bind-Value="category" xs="12" sm="6" md="4">
    <MudField Label="Outlined" Variant="Variant.Outlined"></MudField>
</MudItem>

<MudButton Class="d-flex flex-1" ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Style="margin-top: 40px" OnClick="CreateForums">Create</MudButton>

@code {
    string forumTitle = "";
    string forumDescription = "";
    string category = "";
    
    private IEnumerable<string> MaxCharacters(string value)
    {
        const int MaxLength = 25;
        if (!string.IsNullOrEmpty(value) && value.Length > MaxLength)
        {
            yield return $"The value cannot exceed {MaxLength} characters.";
        }
    }


    private async Task CreateForums()
    {
    // Call the CreateForum method of the ForumService to create the forum
        Forum createdForum = await ForumService.CreateForum(forumTitle, forumDescription, category);

        if (createdForum != null)
        {
    // Forum creation successful
    // Perform any necessary actions, such as displaying a success message or redirecting to another page
        }
        else
        {
    // Forum creation failed
    // Display an error message or handle the failure scenario accordingly
        }
    }
}