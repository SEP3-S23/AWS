@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.Person" Color="Color.Secondary" Href="LoginPage" />
        <MudToggleIconButton @bind-Toggled="@_isDarkMode" ToggledIcon="@Icons.Material.Filled.WbSunny" Color="Color.Tertiary" Icon="@Icons.Material.Filled.NightlightRound" ToggledColor="@Color.Tertiary" @bind-Checked="@_isDarkMode"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1"> 
        <MudDrawerHeader>
            <MudText Typo="Typo.h6" >WeatherApps</MudText>
        </MudDrawerHeader>
        <div>
            <NavMenu />
        </div>
    </MudDrawer>
     <MudMainContent>
          <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
            
          </MudContainer>
        </MudMainContent>
</MudLayout>

@code {
    
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
    
    
    bool _drawerOpen = true;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    

}