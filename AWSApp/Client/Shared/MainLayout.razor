@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" Theme="@_theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.Person" Color="Color.Secondary"/>
        <MudToggleIconButton @bind-Toggled="@IsDarkMode" ToggledIcon="@Icons.Material.Filled.WbSunny" Color="Color.Tertiary" Icon="@Icons.Material.Filled.NightlightRound" ToggledColor="@Color.Tertiary" @bind-Checked="@IsDarkMode"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1"> 
        <MudDrawerHeader>
            <MudText Typo="Typo.h6" >WeatherApps</MudText>
        </MudDrawerHeader>
        <div>
            <NavMenu />
        </div>
    </MudDrawer>
    <MudMainContent Color="Color.Primary">
        <MudContainer Color="Color.Primary">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    public bool IsDarkMode { get; set;}

    MudTheme MyTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = Colors.DeepPurple.Darken4, 
            BackgroundGrey = Colors.Grey.Darken3,

        },
    };
    
    
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    

}